@startuml
hide circle

package "Logic Layer" as Logic {
    interface Logic {
        +execute(String)
        +getAddressBook()
        +getFilteredPersonList()
        +getAddressBookFilePath()
        +getGuiSettings()
        +setGuiSettings(GuiSettings)
    }

    class LogicManager {
        -Model model
        -Storage storage
        -AddressBookParser addressBookParser
        +execute(String)
        -saveModel()
    }

    class AddressBookParser {
        +parseCommand(String)
    }

    abstract class Command {
        +execute(Model)
    }

    class FindCommand {
        -NameContainsKeywordsPredicate predicate
        +execute(model)
    }

    class AddStudentCommand {
        -Person toAdd
        +execute(model)
    }

    class CreateTeamCommand {
        -String teamName
        +execute(model)
    }

    class AddStudentToTeamCommand {
        -Index studentIndex
        -String teamName
        +execute(model)
    }

    class RemoveFromTeamCommand {
        -Index personIndex
        -String teamName
        +execute(model)
    }

    class DeleteCommand {
        -Index targetIndex
        -Email targetEmail
        +execute(model)
    }

    class CommandResult {
        -String feedbackToUser
        -boolean showHelp
        -boolean exit 
        +getFeedbackToUser()
        +isShowHelp()
        +isExit()
    }
}

LogicManager .up.|> Logic
LogicManager "1" --> "1" AddressBookParser
LogicManager "1" --> "1" Model
LogicManager "1" --> "1" Storage
AddressBookParser "1" --> "0..*" Command : parses to
FindCommand --|> Command
AddStudentCommand --|> Command
CreateTeamCommand --|> Command
AddStudentToTeamCommand --|> Command
RemoveFromTeamCommand --|> Command
DeleteCommand --|> Command

@enduml
